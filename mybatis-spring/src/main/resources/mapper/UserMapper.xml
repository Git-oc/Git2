<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.UserMapper">

    <select id="findUserById" parameterType="int" resultType="com.po.User">
        SELECT *  FROM user WHERE id=#{value}
    </select>

    <!-- 根据用户名称模糊查询用户信息-->
    <select id="findUserByName" parameterType="String" resultType="com.po.User">
        SELECT * FROM user WHERE username LIKE '%${value}%'
    </select>

    <!-- 添加用户-->
    <insert id="insertUser" parameterType="com.po.User">
        <!--将插入数据的主键返回，返回到user对象中-->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO user (user_username,user_birthday,user_sex,user_address)
        values (#{username},#{birthday},#{sex},#{address})
    </insert>

    <!-- 删除用户 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id=#{id}
    </delete>

    <!-- 根据id更新用户-->
    <update id="updateUser" parameterType="com.po.User">
        update user set username=#{username},birthday=#{birthday},sex=#{sex},address=#{address}
        where id=#{id}
    </update>

    <!-- 定义sql片段-->
    <sql id="query_user_where">
        <if test="userCustom!=null">
            <if test="userCustom.sex!=null and userCustom.sex!=''">
                AND user.sex = #{userCustom.sex}
            </if>
            <if test="userCustom.username!=null and userCustom.username!=''">
                AND user.username LIKE '%${userCustom.username}%'
            </if>
            <if test="ids!=null">
                <foreach collection="ids" item="user_id" open="AND (" close=")" separator="or">
                    <!-- 每个遍历需要拼接的串 -->
                    id=#{user_id}
                </foreach>

            </if>
        </if>
    </sql>

    <!-- 用户信息综合查询   -->
    <select id="findUserList" parameterType="com.po.UserQueryVo"
            resultType="com.po.UserCustom">
        SELECT * FROM user
        <!--  where 可以自动去掉条件中的第一个and -->
        <where>
            <!-- 引用sql片段 的id，如果refid指定的id不在本mapper文件中，需要前边加namespace -->
            <include refid="query_user_where"/>
            <!-- 在这里还要引用其它的sql片段  -->
        </where>

    </select>

    <!-- 用户信息综合查询总数
        parameterType：指定输入类型和findUserList一样
        resultType：输出结果类型
    -->
    <select id="findUserCount" parameterType="com.po.UserQueryVo" resultType="int">
        SELECT count(*) FROM user
        <where>
            <if test="userCustom!=null">
                <if test="userCustom.sex!=null and userCustom.sex != '' ">
                    AND user.sex=#{userCustom.sex}
                </if>
                <if test="userCustom.username!=null and userCustom.username != '' ">
                    AND user.username LIKE '%${userCustom.username}%'
                </if>
            </if>
        </where>
    </select>

    <!-- 定义resultMap-->
    <resultMap type="user" id="userResultMap">
        <!-- id表示查询结果集中唯一标识 -->
        <id column="id_" property="id"/>
        <result column="username_" property="username"/>

    </resultMap>

    <!-- 使用resultMap进行输出映射,resultMap：指定定义的resultMap的id，如果这个resultMap在其它的mapper文件，前边需要加namespace-->
    <select id="findUserByIdResultMap" parameterType="int" resultMap="userResultMap">
        SELECT id id_,username username_ FROM user WHERE id=#{value}
    </select>


</mapper>